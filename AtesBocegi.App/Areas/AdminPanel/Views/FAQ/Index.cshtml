@{
    ViewData["Title"] = "Sıkça Sorulan Sorular";
}


<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <!-- /.panel-heading -->
            <div class="panel-body">
                <button class="pull-right btn btn-info" id="BtnNewFAQ">Yeni Soru</button>
                <table width="100%" class="table table-striped table-bordered table-hover" id="FAQTable">
                    <thead>
                        <tr>
                            <th class="tdfit "><b>#</b></th>
                            <th class="tdfit "><b>Soru</b></th>
                            <th class="tdfit text-center">
                                <b>Actions</b>
                            </th>
                        </tr>
                    </thead>

                </table>
            </div>
            <!-- /.panel-body -->
        </div>
        <!-- /.panel -->
    </div>
    <!-- /.col-lg-12 -->
</div>

<div class="modal fade" id="FAQModal" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title" id="modalTitle"></h4>
            </div>
            <div class="modal-body">

                <div class="alert alert-danger" id="ModalErrorMessages" style="display:none">

                </div>
                <input type="hidden" id="FAQId" />
                <div class="form-group">
                    <label>Soru</label>
                    <input id="Question" class="form-control" />
                </div>
                <div class="form-group">
                    <label>Cevap</label>
                    <textarea id="Answer" class="form-control"></textarea>
                </div>
                <div class="form-group">
                    <label>Ekran Sıralaması</label>
                    <input type="number" id="ScreenOrder" class="form-control" />
                </div>
                <div class="form-group">
                    <label>Ekranda Gösterilsin mi?</label>
                    <input id="IsVisible" type="checkbox" class="form-control" />
                </div>
                <div id="CreatePanel" style="display:none">
                    <button onclick="CreateFAQ()" class="btn btn-default">Ekle</button>
                </div>
                <div id="UpdatePanel" style="display:none">
                    <button onclick="UpdateFAQ()" class="btn btn-default">Güncelle</button>
                    <button onclick="DeleteFAQ()" class="btn btn-default">Sil</button>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Kapat</button>
            </div>
        </div>
    </div>
</div>

@section scripts
    {
    <script>
        var modalErrorMessages = $("#ModalErrorMessages");
        var modal = $("#FAQModal");
        var modalTitle = $("#modalTitle");
        var modalCreatePanel = $("#CreatePanel");
        var modalUpdatePanel = $("#UpdatePanel");
        $(document).ready(function () {

            oTable = $('#FAQTable').DataTable({
                "processing": true, // for show processing bar
                "serverSide": true, // for process on server side
                "orderMulti": false, // for disable multi column order
                "dom": '<"top"i>rt<"bottom"p><"clear">',
                "ajax": {
                    "url": "/services/FAQ",
                    "method": "POST"
                },
                "columns": [
                    { "data": "id", "name": "id", "autoWidth": true }, //index 0
                    { "data": "question", "name": "Question", "autoWidth": true }, //index 0
                    {
                        "data": "id",
                        render: function (data, type, row) {
                            return ' <a style="cursor:pointer" onclick="GetFAQ(' + data + ')"><span class="glyphicon glyphicon-info-sign"></span> Detay</a>'
                        }
                    }
                ],
                "ordering": true,
                "paging": true,
                "pagingType": "full_numbers",
                "pageLength": "5"
            });
            //Apply Custom search on jQuery DataTables here

            $("#BtnNewFAQ").click(function () {
                modalErrorMessages.hide();
                modalTitle.html("SSS Ekle");
                modalCreatePanel.show();
                modalUpdatePanel.hide();
                modal.modal("toggle");
            });



        });


        function GetFAQData(Id) {
            $.ajax({
                url: "/services/FAQ/GetFAQ",
                type: "post",
                data: { Id: Id },
                success: function (data) {
                    modalTitle.html("Soru Güncelle");
                    $("#Question").val(data.question);
                    $("#Answer").val(data.answer);
                    $("#IsVisible").prop('checked', data.isVisible);
                    $("#ScreenOrder").val(data.screenOrder);
                    $("#FAQId").val(data.id);
                },
                error: function (data) {
                    alert(data.responseText);
                }
            });

        }

        function GetFAQ(Id) {
            GetFAQData(Id);
            modalErrorMessages.hide();
            modalCreatePanel.hide();
            modalUpdatePanel.show();
            modal.modal("show");
        };

        function DeleteFAQ() {
            $.ajax({
                url: "/services/FAQ/DeleteFAQ",
                type: "post",
                data: { Id: $("#FAQId").val() },
                success: function (data) {
                    oTable.draw();
                    $("#FAQId").val("");
                    alert(data);
                    modal.modal("toggle");
                },
                error: function (data) {
                    alert(data.responseText);
                }
            });
        }

        function UpdateFAQ() {
            modalErrorMessages.html("");
            modalErrorMessages.hide();
            var Question = $("#Question").val();
            var Answer = $("#Answer").val();
            var ScreenOrder = $("#ScreenOrder").val();
            var IsVisible = $("#IsVisible").is(':checked');
            var Id = $('#FAQId').val();
            if (Question == "" || Answer == "" || ScreenOrder == null || ScreenOrder == 0) {
                modalErrorMessages.show();
                modalErrorMessages.append("<li>Gerekli Alanları Doldurunuz!</li>");
            }
            else {
                var formData = new FormData();
                formData.append("Question", Question);
                formData.append("Answer", Answer);
                formData.append("ScreenOrder", ScreenOrder);
                formData.append("IsVisible", IsVisible);
                formData.append("Id", Id);
                $.ajax({
                    url: "/services/FAQ/OperateFAQ",
                    type: "post",
                    data: formData,
                    contentType: false,
                    processData: false,
                    success: function (data) {
                        oTable.draw();
                        GetFAQData(Id);
                        modalErrorMessages.html(data);
                        modalErrorMessages.removeClass("alert-danger");
                        modalErrorMessages.addClass("alert-success");
                        modalErrorMessages.show();
                    },
                    error: function (data) {
                        modalErrorMessages.html("");
                        if (data.responseJSON.modelState != null) {
                            data.responseJSON.modelState.forEach(function (item, index) {
                                item.value.errors.forEach(function (error, idx) {
                                    modalErrorMessages.append("<li>" + error.errorMessage + "</li>");
                                });
                            });
                            modalErrorMessages.removeClass("alert-success");
                            modalErrorMessages.addClass("alert-danger");
                            modalErrorMessages.show();
                        }
                    }
                });
            }
        }
        
        function CreateFAQ() {
            modalErrorMessages.html("");
            modalErrorMessages.hide();
            var Question = $("#Question").val();
            var Answer = $("#Answer").val();
            var ScreenOrder = $("#ScreenOrder").val();
            var IsVisible = $("#IsVisible").is(':checked');
            if (Question == "" || Answer == "" || ScreenOrder == null || ScreenOrder == 0) {
                modalErrorMessages.show();
                modalErrorMessages.append("<li>Gerekli Alanları Doldurunuz!</li>");
            }
            else {
                var formData = new FormData();
                formData.append("Question", Question);
                formData.append("Answer", Answer);
                formData.append("ScreenOrder", ScreenOrder);
                formData.append("IsVisible", IsVisible);
                $.ajax({
                    url: "/services/FAQ/OperateFAQ",
                    type: "post",
                    data: formData,
                    contentType: false,
                    processData: false,
                    success: function (data) {
                        modalErrorMessages.html(data);
                        modalErrorMessages.removeClass("alert-danger");
                        modalErrorMessages.addClass("alert-success");
                        modalErrorMessages.show();
                        oTable.draw();
                    },
                    error: function (data) {
                        modalErrorMessages.html("");
                        if (data.responseJSON.modelState != null) {
                            data.responseJSON.modelState.forEach(function (item, index) {
                                item.value.errors.forEach(function (error, idx) {
                                    modalErrorMessages.append("<li>" + error.errorMessage + "</li>");
                                });
                            });
                            modalErrorMessages.removeClass("alert-success");
                            modalErrorMessages.addClass("alert-danger");
                            modalErrorMessages.show();
                        }
                    }
                });
            }
        }


    </script>
}